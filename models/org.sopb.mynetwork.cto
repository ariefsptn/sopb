/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Write your model definitions here
 */

namespace org.sopb.mynetwork

abstract participant SOPBParticipant identified by userId {
  o String userId
  o String userName
}

participant Manufacturer extends SOPBParticipant {
    o String email optional
    o String phoneNum optional
    o String manuLocation optional
    o isVerified ver default = "YES" 
}

participant Owner extends SOPBParticipant {
    o ownerType type
    o String ownerLocation optional
    o String email optional
    o String phoneNum optional
    o isVerified ver default="YES"
}

enum ownerType {
  o CUSTOMER
  o RETAILER
  o DISTRIBUTOR
}

enum isVerified {
  o YES
  o NO
}

asset Product identified by prodId {
  o String prodId
  o String prodTypeId
  o String prodName
  o String prodSpecs
  o String imgUrl
  o String prodLocation
  o DateTime prodDate 
  o Integer ownerCount default=0
  //--> Owner firstOwner optional
  //--> Owner currentOwner optional
  --> Owner newOwner optional
  --> Owner[] owners optional
  --> Manufacturer prodManu
  o History[] transactionHistory optional
  o Status prodStat default="MANUFACTURED"
}

concept History {
  o String ownerId
  o String ownerType
  o String transactionType
  o String desc default="-"
  o DateTime timestamp
}

enum Status {
  o MANUFACTURED
  o ONDISTRIBUTION
  o ONRETAIL
  o SENT
  o OWNED
}

transaction EnrollProduct {
  o String id
  o String prodTypeId
  o String prodName
  o String prodSpecs
  o String imgUrl
  o String prodLocation
}

event ProductEnrolled {
  o String prodId
}

transaction InitialTransfer {
  --> Product[] productList
  --> Owner firstOwner
}

transaction TransferProduct {
  --> Product[] productList
  --> Owner newOwner
  o String desc optional
}

event ProductTransferred {
  o String prodId
  o String transferredFrom
  o String transferredTo
}


transaction AcceptProduct {
  --> Product[] productList
}


event ProductAccepted {
  o String prodId
  o String transferredFrom
  o String transferredTo
}

transaction EditDataOwner {
  --> Owner owner
  o String userName 
  o String ownerLocation 
  o String email 
  o String phoneNum 
}

transaction EditDataManufacturer{
  --> Manufacturer man
  o String email 
  o String phoneNum 
  o String manuLocation 
}

transaction CancelTransfer {
  --> Product[] productList
  o String desc optional
}

event TransferCancelled {
  o String prodId
  o String transferredFrom
  o String transferredTo
  o String cancelledBy
}

transaction ChangeVerificationStatusManufacturer {
  --> Manufacturer man
}

transaction ChangeVerificationStatusOwner {
  --> Owner owner
}